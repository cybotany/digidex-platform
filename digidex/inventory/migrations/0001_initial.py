# Generated by Django 5.0.2 on 2024-05-31 16:17

import base.utils.storage
import django.db.models.deletion
import inventory.models.profile
import uuid
import wagtail.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('digitization', '0001_initial'),
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfileIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, max_length=255)),
                ('intro', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Inventory Category UUID')),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True, verbose_name='Inventory Category Slug')),
                ('name', models.CharField(default='Category', help_text='Inventory Category Name.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Inventory Category description.', null=True)),
                ('is_party', models.BooleanField(default=False, help_text='Indicates if this is the Party category.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='InventoryCategoryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, max_length=255, null=True)),
                ('intro', models.TextField(blank=True, null=True)),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='page', to='inventory.category')),
            ],
            options={
                'verbose_name': 'Inventory Category Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='InventoryDigit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Inventory Digit UUID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemized_digits', to='inventory.category')),
                ('digit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_category', to='digitization.digitalobject')),
            ],
            options={
                'unique_together': {('category', 'digit')},
            },
        ),
        migrations.CreateModel(
            name='InventoryDigitPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, max_length=255)),
                ('intro', models.TextField(blank=True)),
                ('digit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='page', to='inventory.inventorydigit')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='User Profile UUID')),
                ('image', models.ImageField(blank=True, null=True, storage=base.utils.storage.PublicMediaStorage(), upload_to=inventory.models.profile.user_avatar_path, verbose_name='User Profile Avatar')),
                ('bio', models.TextField(blank=True, help_text='Short Biography about the user.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
            },
        ),
        migrations.CreateModel(
            name='UserProfilePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='page', to='inventory.userprofile')),
            ],
            options={
                'verbose_name': 'User Profile Page',
            },
            bases=('wagtailcore.page',),
        ),
    ]
