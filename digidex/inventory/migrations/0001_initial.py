# Generated by Django 5.0.2 on 2024-05-31 19:31

import base.utils.storage
import django.db.models.deletion
import inventory.models.journal
import inventory.models.profile
import uuid
import wagtail.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Inventory Category UUID')),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True, verbose_name='Inventory Category Slug')),
                ('name', models.CharField(default='Category', help_text='Inventory Category Name.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Inventory Category description.', null=True)),
                ('is_party', models.BooleanField(default=False, help_text='Indicates if this is the Party category.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, max_length=255)),
                ('intro', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CategoryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, max_length=255, null=True)),
                ('intro', models.TextField(blank=True, null=True)),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='page', to='inventory.category')),
            ],
            options={
                'verbose_name': 'Inventory Category Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DigitalObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Digitized Object UUID')),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True, verbose_name='Digitized Object Slug')),
                ('name', models.CharField(help_text='Digitized Object Name.', max_length=100, null=True)),
                ('description', models.TextField(blank=True, help_text='Digitized Object Description.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemized_digits', to='inventory.category')),
            ],
            options={
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DigitalObjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, max_length=255)),
                ('intro', models.TextField(blank=True)),
                ('digit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='page', to='inventory.digitalobject')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='EntryCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Journal Entry Collection UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('digital_object', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='journal', to='inventory.digitalobject')),
            ],
            options={
                'verbose_name': 'Journal Entry Collection',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, storage=base.utils.storage.PublicMediaStorage(), upload_to=inventory.models.journal.journal_image_path)),
                ('entry_number', models.PositiveIntegerField(default=1, help_text='Entry number in the journal.')),
                ('caption', models.CharField(blank=True, help_text='Image caption.', max_length=250, null=True)),
                ('note', models.TextField(blank=True, help_text='Journal entry note.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='inventory.entrycollection')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='User Profile UUID')),
                ('image', models.ImageField(blank=True, null=True, storage=base.utils.storage.PublicMediaStorage(), upload_to=inventory.models.profile.user_avatar_path, verbose_name='User Profile Avatar')),
                ('bio', models.TextField(blank=True, help_text='Short Biography about the user.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_categories', to='inventory.userprofile'),
        ),
        migrations.CreateModel(
            name='UserProfilePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='page', to='inventory.userprofile')),
            ],
            options={
                'verbose_name': 'User Profile Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('profile', 'name')},
        ),
    ]
