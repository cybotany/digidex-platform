# Generated by Django 4.1.7 on 2023-09-28 01:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Comment ID')),
                ('commentator', models.CharField(blank=True, max_length=100, null=True, verbose_name='Commentator')),
                ('comment_detail', models.TextField(verbose_name='Comment Detail')),
                ('comment_time_stamp', models.DateTimeField(auto_now_add=True, verbose_name='Comment Timestamp')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Experts',
            fields=[
                ('expert_id_prefix', models.CharField(default='EXP', editable=False, max_length=3, verbose_name='Expert ID Prefix')),
                ('expert_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Expert ID')),
                ('expert', models.CharField(max_length=100, verbose_name='Expert Name')),
                ('exp_comment', models.CharField(blank=True, max_length=500, null=True, verbose_name='Expert Comment')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='GeographicDivision',
            fields=[
                ('tsn', models.IntegerField(primary_key=True, serialize=False, verbose_name='Taxonomic Serial Number')),
                ('geographic_value', models.CharField(max_length=45, verbose_name='Geographic Value')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Hierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hierarchy_string', models.CharField(help_text='The concatenated TSNs, delimited with a hyphen, which represents the hierarchy from Kingdom to TSN of concern.', max_length=300, unique=True, verbose_name='Hierarchy String')),
                ('tsn', models.IntegerField(help_text='The TSN for the hierarchy entry. The unique identifier for an occurrence of Taxonomic Units.', verbose_name='Taxonomic Serial Number')),
                ('parent_tsn', models.IntegerField(blank=True, help_text='The direct parent TSN of hierarchy.TSN.', null=True, verbose_name='Parent TSN')),
                ('level', models.IntegerField(help_text='The distance down the hierarchy from Kingdom to TSN of concern for the hierarchy entry.', verbose_name='Level')),
                ('children_count', models.IntegerField(help_text='The number of total children a particular TSN has, from its direct children to the bottom of the hierarchy.', verbose_name='Children Count')),
            ],
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('tsn', models.IntegerField(primary_key=True, serialize=False, verbose_name='Taxonomic Serial Number')),
                ('jurisdiction_value', models.CharField(max_length=30, verbose_name='Jurisdiction Value')),
                ('origin', models.CharField(blank=True, choices=[('Native', 'Native'), ('Introduced', 'Introduced'), ('Native & Introduced', 'Native & Introduced'), ('Incidental', 'Incidental')], max_length=19, null=True, verbose_name='Origin')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Kingdoms',
            fields=[
                ('kingdom_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Kingdom ID')),
                ('kingdom_name', models.CharField(max_length=10, verbose_name='Kingdom Name')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Longnames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(help_text='The unique identifier for an occurrence of Taxonomic Units.', verbose_name='Taxonomic Serial Number')),
                ('completename', models.CharField(help_text='The unit indicators and unit name fields concatenated and trimmed to present entire scientific name, without taxon author.', max_length=164, verbose_name='Complete Name')),
            ],
        ),
        migrations.CreateModel(
            name='NODC_IDs',
            fields=[
                ('nodc_id', models.CharField(max_length=12, primary_key=True, serialize=False, verbose_name='NODC ID')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('tsn', models.IntegerField(verbose_name='Taxonomic Serial Number')),
            ],
        ),
        migrations.CreateModel(
            name='OtherSources',
            fields=[
                ('source_id_prefix', models.CharField(default='SRC', editable=False, max_length=3, verbose_name='Source ID Prefix')),
                ('source_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Source ID')),
                ('source_type', models.CharField(blank=True, max_length=10, null=True, verbose_name='Source Type')),
                ('source', models.CharField(blank=True, max_length=64, null=True, verbose_name='Source Name')),
                ('version', models.CharField(blank=True, max_length=10, null=True, verbose_name='Version')),
                ('acquisition_date', models.DateTimeField(blank=True, null=True, verbose_name='Acquisition Date')),
                ('source_comment', models.CharField(blank=True, max_length=500, null=True, verbose_name='Source Comment')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Publications',
            fields=[
                ('publication_id_prefix', models.CharField(default='PUB', editable=False, max_length=3, verbose_name='Publication ID Prefix')),
                ('publication_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Publication ID')),
                ('reference_author', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference Author')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('publication_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Publication Name')),
                ('listed_pub_date', models.DateTimeField(blank=True, null=True, verbose_name='Listed Publication Date')),
                ('actual_pub_date', models.DateTimeField(blank=True, null=True, verbose_name='Actual Publication Date')),
                ('publisher', models.CharField(blank=True, max_length=80, null=True, verbose_name='Publisher')),
                ('pub_place', models.CharField(blank=True, max_length=40, null=True, verbose_name='Publication Place')),
                ('isbn', models.CharField(blank=True, max_length=16, null=True, verbose_name='ISBN')),
                ('issn', models.CharField(blank=True, max_length=16, null=True, verbose_name='ISSN')),
                ('pages', models.CharField(blank=True, max_length=15, null=True, verbose_name='Pages')),
                ('pub_comment', models.CharField(blank=True, max_length=500, null=True, verbose_name='Publication Comment')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(help_text='The unique identifier for an occurrence of Taxonomic Units.', verbose_name='Taxonomic Serial Number')),
                ('doc_id_prefix', models.CharField(choices=[('EXP', 'Expert'), ('PUB', 'Publication'), ('SRC', 'Source')], help_text='A designation affixed to the documentation_id identifying the reference as a publication, expert or other source.', max_length=3, verbose_name='Document ID Prefix')),
                ('documentation_id', models.IntegerField(help_text='The serial portion of the identifier created for either the Publications table, the Experts table or the Other_Sources table.', verbose_name='Documentation ID')),
                ('original_desc_ind', models.CharField(blank=True, choices=[('T', 'True'), ('F', 'False')], help_text='Indicator used to identify that this occurrence represents the reference of the original description, when available.', max_length=1, null=True, verbose_name='Original Description Indicator')),
                ('init_itis_desc_ind', models.CharField(blank=True, choices=[('T', 'True'), ('F', 'False')], help_text='Indicator used to identify the reference(s) that serve as the reason for an occurrence of Taxonomic Units being recognized where the original reference is unavailable.', max_length=1, null=True, verbose_name='Initial ITIS Description Indicator')),
                ('change_track_id', models.IntegerField(blank=True, help_text='The unique identifier assigned to a change made to an occurrence of Taxonomic Units.', null=True, verbose_name='Change Track ID')),
                ('vernacular_name', models.CharField(blank=True, max_length=80, null=True, verbose_name='Vernacular Name')),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The date on which a record is modified.', verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='StrippedAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxon_author_id', models.IntegerField(help_text='A unique identifier for the author(s) of a taxonomic name.', verbose_name='Taxon Author ID')),
                ('shortauthor', models.CharField(help_text='The author(s) associated with the name of a taxon with parenthesis, commas and periods removed.', max_length=100, verbose_name='Short Author')),
            ],
        ),
        migrations.CreateModel(
            name='SynonymLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(help_text='The unique identifier for an occurrence of Taxonomic Units.', verbose_name='Taxonomic Serial Number')),
                ('tsn_accepted', models.IntegerField(help_text='The taxonomic serial number assigned to the accepted occurrence of Taxonomic Units to which a synonym is associated.', verbose_name='Accepted Taxonomic Serial Number')),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The date on which a record is modified.', verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonAuthorsLKUP',
            fields=[
                ('taxon_author_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Taxon Author ID')),
                ('taxon_author', models.CharField(max_length=100, verbose_name='Taxon Author')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('kingdom_id', models.IntegerField(choices=[(1, 'Bacteria'), (2, 'Protozoa'), (3, 'Plantae'), (4, 'Fungi'), (5, 'Animalia'), (6, 'Chromista'), (7, 'Archaea')], verbose_name='Kingdom ID')),
                ('short_author', models.CharField(blank=True, max_length=100, null=True, verbose_name='Short Author')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonomicUnits',
            fields=[
                ('tsn', models.IntegerField(primary_key=True, serialize=False, verbose_name='Taxonomic Serial Number')),
                ('unit_ind1', models.CharField(blank=True, max_length=1, null=True)),
                ('unit_name1', models.CharField(blank=True, max_length=35, null=True)),
                ('unit_ind2', models.CharField(blank=True, max_length=1, null=True)),
                ('unit_name2', models.CharField(blank=True, max_length=35, null=True)),
                ('unit_ind3', models.CharField(blank=True, max_length=7, null=True)),
                ('unit_name3', models.CharField(blank=True, max_length=35, null=True)),
                ('unit_ind4', models.CharField(blank=True, max_length=7, null=True)),
                ('unit_name4', models.CharField(blank=True, max_length=35, null=True)),
                ('usage', models.CharField(blank=True, max_length=12, null=True)),
                ('unaccept_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('credibility_rtng', models.CharField(blank=True, max_length=40, null=True)),
                ('completeness_rtng', models.CharField(blank=True, max_length=10, null=True)),
                ('currency_rating', models.CharField(blank=True, max_length=7, null=True)),
                ('phylo_sort_sequence', models.SmallIntegerField(blank=True, null=True)),
                ('initial_time_stamp', models.DateTimeField(auto_now_add=True)),
                ('parent_tsn', models.IntegerField(blank=True, null=True)),
                ('taxon_author_id', models.IntegerField(blank=True, null=True)),
                ('hybrid_author_id', models.IntegerField(blank=True, null=True)),
                ('kingdom_id', models.SmallIntegerField(blank=True, null=True)),
                ('rank_id', models.SmallIntegerField(blank=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('uncertain_prnt_ind', models.CharField(blank=True, max_length=3, null=True)),
                ('name_usage', models.CharField(blank=True, max_length=12, null=True)),
                ('complete_name', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaxonUnitTypes',
            fields=[
                ('kingdom_id', models.IntegerField(choices=[(1, 'Bacteria'), (2, 'Protozoa'), (3, 'Plantae'), (4, 'Fungi'), (5, 'Animalia'), (6, 'Chromista'), (7, 'Archaea')], verbose_name='Kingdom ID')),
                ('rank_id', models.SmallIntegerField(primary_key=True, serialize=False, verbose_name='Rank ID')),
                ('rank_name', models.CharField(max_length=15, verbose_name='Rank Name')),
                ('direct_parent_rank_id', models.SmallIntegerField(blank=True, null=True, verbose_name='Direct Parent Rank ID')),
                ('required_parent_rank_id', models.SmallIntegerField(blank=True, null=True, verbose_name='Required Parent Rank ID')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='TUCommentsLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(help_text='The unique identifier for an occurrence of Taxonomic Units.', verbose_name='Taxonomic Serial Number')),
                ('comment_id', models.IntegerField(help_text='The unique identifier for remarks associated with an occurrence of Taxonomic Units.', verbose_name='Comment ID')),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The date on which a record is modified.', verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Vernaculars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(help_text='The unique identifier for an occurrence of Taxonomic Units.', verbose_name='Taxonomic Serial Number')),
                ('vernacular_name', models.CharField(help_text='A common name associated with an occurrence of Taxonomic Units.', max_length=80, verbose_name='Vernacular Name')),
                ('language', models.CharField(help_text='Native language from which the vernacular name originates.', max_length=15, verbose_name='Language')),
                ('approved_ind', models.CharField(blank=True, choices=[('T', 'True'), ('F', 'False')], help_text='Designation identifying those vernacular names authorized for use by regulation, statute, etc.', max_length=1, null=True, verbose_name='Approved Indicator')),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The date on which a record is modified.', verbose_name='Update Date')),
                ('vern_id', models.IntegerField(help_text='The serial portion of the identifier created for a vernacular name associated with an occurrence of a Taxonomic Unit.', verbose_name='Vernacular ID')),
            ],
        ),
        migrations.CreateModel(
            name='VernRefLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(help_text='The unique identifier for an occurrence of Taxonomic Units.', verbose_name='Taxonomic Serial Number')),
                ('doc_id_prefix', models.CharField(choices=[('EXP', 'Expert'), ('PUB', 'Publication'), ('SRC', 'Source')], help_text='A designation affixed to the documentation_id identifying the reference as a publication, expert or other source.', max_length=3, verbose_name='Document ID Prefix')),
                ('documentation_id', models.IntegerField(help_text='The serial portion of the identifier created for either the Publications table, the Experts table or the Other_Sources table.', verbose_name='Documentation ID')),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The date on which a record is modified.', verbose_name='Update Date')),
                ('vern_id', models.IntegerField(help_text='The serial portion of the identifier created for a vernacular name associated with an occurrence of a Taxonomic Unit.', verbose_name='Vernacular ID')),
            ],
        ),
    ]
