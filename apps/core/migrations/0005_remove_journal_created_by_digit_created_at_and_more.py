# Generated by Django 4.2.6 on 2023-11-27 03:36

import apps.utils.custom_storage
import apps.utils.helpers.get_path
import apps.utils.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0004_alter_group_options_remove_link_created_at_and_more'),
        ('taxonomy', '0008_alter_rank_unique_together'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0004_alter_journal_image'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='journal',
            name='created_by',
        ),
        migrations.AddField(
            model_name='digit',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, help_text='The date and time when the digitized plant record was created.', verbose_name='Created At'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='digit',
            name='description',
            field=models.CharField(blank=True, help_text='A brief description of the digitized plant.', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='digit',
            name='group',
            field=models.ForeignKey(help_text='The group to which the digitized plant belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digits', to='inventory.group'),
        ),
        migrations.AddField(
            model_name='digit',
            name='name',
            field=models.CharField(blank=True, help_text='A human-readable name for the digitized plant.', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='digit',
            name='user',
            field=models.ForeignKey(default=7, help_text='The user who created the digitized plant record.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='journal',
            name='user',
            field=models.ForeignKey(default=7, help_text='The user who created this journal entry.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='digit',
            name='link',
            field=models.OneToOneField(help_text='The NFC tag link associated with the digitized plant.', on_delete=django.db.models.deletion.CASCADE, related_name='digit', to='inventory.link'),
        ),
        migrations.AlterField(
            model_name='digit',
            name='taxonomic_unit',
            field=models.ForeignKey(help_text='The taxonomic classification of the digitized plant.', on_delete=django.db.models.deletion.CASCADE, related_name='digits', to='taxonomy.unit'),
        ),
        migrations.AlterField(
            model_name='journal',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date and time when this journal entry was created.', verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='journal',
            name='digit',
            field=models.ForeignKey(help_text='The digitized plant to which this journal entry is related.', on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to='core.digit'),
        ),
        migrations.AlterField(
            model_name='journal',
            name='entry',
            field=models.TextField(help_text='The textual content of the journal entry.', verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='journal',
            name='image',
            field=models.ImageField(blank=True, help_text='(Optional) The image to save with the journal entry. Only .jpg, .png, and .jpeg extensions are allowed.', null=True, upload_to=apps.utils.custom_storage.JournalImageStorage(apps.utils.helpers.get_path.get_user_directory_path), validators=[apps.utils.validators.validate_image_size_and_dimensions]),
        ),
    ]
