# Generated by Django 4.2.6 on 2024-01-11 02:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeographicDivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(blank=True, null=True)),
                ('geographic_value', models.CharField(blank=True, max_length=200, null=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hierarchy_string', models.TextField(unique=True, verbose_name='Hierarchy String')),
                ('tsn', models.IntegerField()),
                ('parent_tsn', models.IntegerField(blank=True, db_column='parent_tsn', null=True, verbose_name='Parent Taxonomic Serial Number')),
                ('level', models.IntegerField(verbose_name='Taxonomic Rank')),
                ('children_count', models.IntegerField(verbose_name='Taxonomic Rank')),
            ],
            options={
                'verbose_name_plural': 'Hierarchies',
            },
        ),
        migrations.CreateModel(
            name='Kingdom',
            fields=[
                ('kingdom_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Kingdom ID')),
                ('kingdom_name', models.CharField(max_length=10, verbose_name='Kingdom Name')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('tsn', models.IntegerField(primary_key=True, serialize=False, verbose_name='Taxonomic Serial Number')),
                ('unit_ind1', models.CharField(blank=True, max_length=1, null=True)),
                ('unit_name1', models.CharField(blank=True, max_length=35, null=True)),
                ('unit_ind2', models.CharField(blank=True, max_length=1, null=True)),
                ('unit_name2', models.CharField(blank=True, max_length=35, null=True)),
                ('unit_ind3', models.CharField(blank=True, max_length=7, null=True)),
                ('unit_name3', models.CharField(blank=True, max_length=35, null=True)),
                ('unit_ind4', models.CharField(blank=True, max_length=7, null=True)),
                ('unit_name4', models.CharField(blank=True, max_length=35, null=True)),
                ('unnamed_taxon_ind', models.CharField(blank=True, max_length=7, null=True)),
                ('n_usage', models.CharField(blank=True, max_length=12, null=True)),
                ('unaccept_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('credibility_rtng', models.CharField(blank=True, max_length=40, null=True)),
                ('completeness_rtng', models.CharField(blank=True, max_length=10, null=True)),
                ('currency_rating', models.CharField(blank=True, max_length=7, null=True)),
                ('phylo_sort_seq', models.SmallIntegerField(blank=True, null=True)),
                ('initial_time_stamp', models.DateTimeField(auto_now_add=True)),
                ('parent', models.IntegerField(blank=True, db_column='parent_tsn', null=True)),
                ('taxon_author_id', models.IntegerField(blank=True, null=True)),
                ('hybrid_author_id', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, db_column='rank_id', null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('uncertain_prnt_ind', models.CharField(blank=True, max_length=3, null=True)),
                ('name_usage', models.CharField(blank=True, max_length=12, null=True)),
                ('complete_name', models.CharField(blank=True, max_length=300, null=True)),
                ('kingdom', models.ForeignKey(blank=True, db_column='kingdom_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='taxonomy.kingdom')),
            ],
            options={
                'indexes': [models.Index(fields=['complete_name'], name='taxonomy_un_complet_7de243_idx')],
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_id', models.SmallIntegerField(verbose_name='Rank ID')),
                ('rank_name', models.CharField(max_length=15, verbose_name='Rank Name')),
                ('direct_parent_rank_id', models.IntegerField(blank=True, null=True, verbose_name='Direct Parent Rank')),
                ('required_parent_rank_id', models.IntegerField(blank=True, null=True, verbose_name='Required Parent Rank')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('kingdom', models.ForeignKey(db_column='kingdom_id', on_delete=django.db.models.deletion.CASCADE, to='taxonomy.kingdom', verbose_name='Kingdom')),
            ],
            options={
                'unique_together': {('kingdom', 'rank_id')},
            },
        ),
    ]
